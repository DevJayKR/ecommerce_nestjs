services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./cert/cert.pem:/etc/nginx/cert/cert.pem
      - ./cert/key.pem:/etc/nginx/cert/key.pem
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - SERVER_PORT=${SERVER_PORT}
    ports:
      - 443:443
    depends_on:
      - nestjs_api
    networks:
      - ecommerce-networks
  nestjs_api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - 8000:8000
    depends_on:
      - postgres_db
    networks:
      - ecommerce-networks

  redis:
    image: 'redis:alpine'
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - ecommerce-networks
    volumes:
      - redis:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    depends_on:
      - redis
    networks:
      - ecommerce-networks

  postgres_db:
    image: postgres
    restart: always
    container_name: postgres_db
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=asdf1234
      - POSTGRES_DB=ecommerce
    ports:
      - 5432:5432
    networks:
      - ecommerce-networks

volumes:
  postgres-data:
    driver: cio
    driver_opts:
      profile: 'POSTGRESQL'
  redis:
    driver: local

networks:
  ecommerce-networks:
    driver: bridge
